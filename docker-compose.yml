version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  api-gateway:
    image: shahzadahamadp/e-commerce-microservice-api-gateway
    build: 
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "4000:4000"
    depends_on:
      - auth-service
      - product-service
      - order-service
      - rabbitmq
    networks:
      - my_network

  auth-service:
    image: shahzadahamadp/e-commerce-microservice-auth-service
    build: 
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    environment:
      - mongoUrl=mongodb+srv://shahzadahamadp:7DqGIBlOKsi381Fa@mern-auth.uyeurhr.mongodb.net/mern-auth?retryWrites=true&w=majority&appName=Mern-Auth
    depends_on:
      - rabbitmq
    networks:
      - my_network

  product-service:
    image: shahzadahamadp/e-commerce-microservice-product-service
    build: 
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      - mongoUrl=mongodb+srv://shahzadahamadp:7DqGIBlOKsi381Fa@mern-auth.uyeurhr.mongodb.net/mern-auth?retryWrites=true&w=majority&appName=Mern-Auth
      - amqplibServeUrl=amqp://rabbitmq:5672
    depends_on:
      - order-service
      - rabbitmq
    networks:
      - my_network

  order-service:
    image: shahzadahamadp/e-commerce-microservice-order-service
    build: 
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: order-service
    environment:
      - mongoUrl=mongodb+srv://shahzadahamadp:7DqGIBlOKsi381Fa@mern-auth.uyeurhr.mongodb.net/mern-auth?retryWrites=true&w=majority&appName=Mern-Auth
      - amqplibServeUrl=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  mongo_data: