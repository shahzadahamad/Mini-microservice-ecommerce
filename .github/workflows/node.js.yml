# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build and Push Docker Image - Product Service
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: shahzadahamadp/e-commerce-microservice-product-service
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: ./services/product-service/Dockerfile

    - name: Build and Push Docker Image - Auth Service
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: shahzadahamadp/e-commerce-microservice-auth-service
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: ./services/auth-service/Dockerfile

    - name: Build and Push Docker Image - API Gateway
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: shahzadahamadp/e-commerce-microservice-api-gateway
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: ./api-gateway/Dockerfile

    - name: Build and Push Docker Image - Order Service
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: shahzadahamadp/e-commerce-microservice-order-service
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: ./services/order-service/Dockerfile
